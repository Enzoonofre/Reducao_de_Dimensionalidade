# -*- coding: utf-8 -*-
"""Redução de Dimensionalidade.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-fd1BUCoVvAubm4jBt7eeLvh-fd3vEMR

# O projeto tem a finalidade de fazer a redução de dimensionalidade de imagens para poder usar menos processamento em algumas aplicações. Para isso usaremos a biblioteca Opencv2 para realizar essas transformações

## OpenCV2

Para conseguir fazer a redução da dimensionalidade precisamos pegar a imagem e transformar ela em tons de cinza em vez de RGB, assim teremos apenas 1 matriz em vez de 3 para processar quando fizermos o processamento da imagem
"""

from skimage import data #Biblioteca que disponibiliza imagens para podermos usar de exemplo
import matplotlib.pyplot as plt

original = cv2.imread('lena.jpg') #imagem de astronauta colorida
original = cv2.cvtColor(original, cv2.COLOR_BGR2RGB) #Mudando a imagem para RGB -> matplotlib exibe as imagens em RGB enquanto opencv lê a imagem em BGR
plt.imshow(original)
plt.show()

import cv2 #importando a biblioteca para mudar a cor da imagem
import numpy as np

img = cv2.cvtColor(original, cv2.COLOR_BGR2GRAY) # Mudando a imagem para tons de cinza
plt.imshow(img, cmap='gray')  # Exibir corretamente em escala de cinza -> O Matplotlib exibe imagens em RGB, então imagens em tons de cinza podem parecer esverdeadas ou roxas ao serem interpretadas como RGB.

"""###Garantindo que a imagem estará em 255 tons de cinza"""

# Normalizar para 0-255 e garantir uint8
gray_normalized = cv2.normalize(img, None, 0, 255, cv2.NORM_MINMAX, dtype=cv2.CV_8U)
plt.imshow(gray_normalized, cmap='gray')

"""##Agora que temos a imagens em escala de cinza podemos transformar a imagem para binzarização, preto e branco"""

_, binary_img = cv2.threshold(gray_normalized, 127, 255, cv2.THRESH_BINARY) #Garantindo que dos tons de 0 a 127 será em branco e de 128 até 255 será preto
plt.imshow(binary_img, cmap='gray')
plt.title("Imagem Binarizada")

"""#Todas as imagens juntas:"""

plt.figure(figsize=(16, 8))  # Define o tamanho da figura (largura x altura)

#Imagem normal
plt.subplot(2,3,1)
plt.imshow(original)
plt.axis('off')
plt.title('Original')

#Imagem em tons de cinza
plt.subplot(2,3,2)
plt.imshow(gray_normalized, cmap='gray')
plt.axis('off')
plt.title('Tons de Cinza')

#Imagem binaria
plt.subplot(2,3,3)
plt.imshow(binary_img, cmap='gray')
plt.axis('off')
plt.title('Binária')

plt.show()